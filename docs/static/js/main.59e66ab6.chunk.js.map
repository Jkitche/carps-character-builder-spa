{"version":3,"sources":["App.module.scss","components/Welcome/Welcome.module.scss","components/PanelController/PanelController.module.scss","components/AccessSelection/AccessSelection.module.scss","routes.ts","components/Welcome/Welcome.tsx","types/race.ts","store/player/index.ts","types/element.ts","data/raceData.ts","types/accessRank.ts","store/character/index.ts","components/RpgIcon/RpgIcon.tsx","utils/accessDisplay.ts","components/AccessSelection/AccessSelection.tsx","components/MultilineText/MultilineText.tsx","components/RaceTab/RaceTab.tsx","components/RaceSelection/RaceSelection.tsx","components/PlayerInfo/PlayerInfo.tsx","components/PanelController/PanelController.tsx","components/RouterSwitch/RouterSwitch.tsx","store/index.ts","App.tsx","index.tsx","components/PlayerInfo/PlayerInfo.module.scss","components/RaceTab/RaceTab.module.scss","components/RaceSelection/RaceSelection.module.scss"],"names":["module","exports","RoutePaths","Welcome","history","useHistory","className","styles","welcome","icon","onClick","push","WIZARD","RaceNames","playerSlice","createSlice","name","initialState","firstName","lastName","email","reducers","initPlayer","state","action","payload","playerActions","actions","selectPlayerInfo","player","AccessElement","AccessRank","RaceData","Object","freeze","ALLERIAN","accessPicks","majorAccess","specialtyAccess","minorAccess","EARTH","AIR","WATER","costumingRequirements","recommendedCostuming","description","AVYANA","BARBARIAN","DWARF","EFREET","FIRE_ELF","FIREWALKER","FORESTWALKER","GNOME","GUTHRIE","HIGH_ELF","HUMAN","CORSAIR","LORECRAFTER","ORC","SYLVANI","VALKENVI","WOOD_ELF","race","characterSlice","selectRace","setMajorAccess","setSpecialtyAccess","setMinorAccess","characterActions","selectCharacterInfo","character","RpgIcon","size","getAccessDisplay","majorAccessStrings","map","access","join","specialtyAccessStrings","minorAccessStrings","filter","Boolean","shouldButtonBeDisabled","access1","access2","element","includes","AccessSelection","useSelector","dispatch","useDispatch","shouldMajorButtonBeDisabled","curry","shouldSpecialtyButtonBeDisabled","shouldMinorButtonBeDisabled","removeElement","accessArray","newArray","index","indexOf","splice","rankCallbacks","MAJOR","shouldDisableButton","setAccess","SPECIALTY","MINOR","AccessButton","elementIcon","rank","callbacks","FIRE","disabled","active","newAccess","accessContainer","nextButton","accessHeader","accessSelection","vertical","large","MultilineText","text","split","i","key","RaceTab","openPanel","raceTab","raceInfo","clsx","imagePlaceholder","Classes","SKELETON","raceMeta","component","title","RaceSelection","React","useState","visibleRace","setVisibleRace","raceTabs","id","panel","tab","raceSelection","header","selectedTabId","onChange","PlayerInfo","setFirstName","setLastName","setEmail","playerInfo","onSubmit","event","preventDefault","label","labelFor","labelInfo","leftIcon","placeholder","input","value","target","required","type","continueButton","PanelController","panels","setPanels","breadcrumbs","items","panelController","initialPanel","onOpen","onClose","slice","RouterSwitch","path","WELCOME","store","configureStore","reducer","App","app","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59e66ab6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"Welcome_welcome__1lMtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelController\":\"PanelController_panelController__t_18A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accessContainer\":\"AccessSelection_accessContainer__1d3lE\",\"nextButton\":\"AccessSelection_nextButton__3dUXq\",\"accessHeader\":\"AccessSelection_accessHeader__2nxFe\",\"accessSelection\":\"AccessSelection_accessSelection__3-KGM\",\"header\":\"AccessSelection_header__hKQFV\",\"access\":\"AccessSelection_access__Zkv4i\"};","export enum RoutePaths {\n\tWELCOME = \"/\",\n\tWIZARD = \"/wizard\",\n}\n","import { Button } from \"@blueprintjs/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePaths } from \"../../routes\";\nimport styles from \"./Welcome.module.scss\";\n\nexport function Welcome(): React.ReactElement {\n\tconst history = useHistory();\n\treturn (\n\t\t<div className={styles.welcome}>\n\t\t\t<h2>Welcome to CARPS! This tool will help you build your character.</h2>\n\t\t\t<Button\n\t\t\t\ticon=\"caret-right\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\thistory.push(RoutePaths.WIZARD);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tClick here to start!\n\t\t\t</Button>\n\t\t\t<h3>If you have an issue with this application, please contact Jae Kitchens</h3>\n\t\t</div>\n\t);\n}\n","import { AccessRank } from \"./accessRank\";\nimport { AccessElement } from \"./element\";\n\nexport enum RaceNames {\n\tALLERIAN = \"Allerian (Human)\",\n\tAVYANA = \"Avyana\",\n\tBARBARIAN = \"Barbarian\",\n\tDWARF = \"Dwarf\",\n\tEFREET = \"Efreet\",\n\tFIRE_ELF = \"Fire Elf\",\n\tFIREWALKER = \"Firewalker Ga'Vin\",\n\tFORESTWALKER = \"Forestwalker Ga'Vin\",\n\tGNOME = \"Gnome\",\n\tGUTHRIE = \"Guthrie\",\n\tHIGH_ELF = \"High Elf\",\n\tHUMAN = \"Human\",\n\tCORSAIR = \"Islander (Corsair) Human\",\n\tLORECRAFTER = \"Lorecrafter Dwarf\",\n\tORC = \"Orc\",\n\tSYLVANI = \"Sylvani\",\n\tVALKENVI = \"Valken'Vi\",\n\tWOOD_ELF = \"Wood Elf\",\n}\n\nexport interface RaceAccess {\n\trank: AccessRank;\n\telement: AccessElement;\n}\n\nexport interface Race {\n\tmajorAccess: AccessElement[];\n\tspecialtyAccess: AccessElement[];\n\tminorAccess: AccessElement[];\n\taccessPicks: number;\n\tcostumingRequirements: string;\n\trecommendedCostuming: string;\n\tdescription: string;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"..\";\nimport { Player } from \"../../types/player\";\n\ninterface PlayerState {\n\tfirstName: string;\n\tlastName: string;\n\temail: string;\n}\n\nconst initialState: PlayerState = {\n\tfirstName: \"\",\n\tlastName: \"\",\n\temail: \"\",\n};\n\nexport const playerSlice = createSlice({\n\tname: \"player\",\n\tinitialState,\n\treducers: {\n\t\tinitPlayer: (state: PlayerState, action: PayloadAction<Player>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport const playerActions = {\n\tinitPlayer: playerSlice.actions.initPlayer,\n};\n\nexport const selectPlayerInfo = (state: RootState): PlayerState => state.player;\n","export enum AccessElement {\n\tFIRE = \"Fire\",\n\tWATER = \"Water\",\n\tAIR = \"Air\",\n\tEARTH = \"Earth\",\n}\n","import { AccessElement } from \"../types/element\";\nimport { Race, RaceNames } from \"../types/race\";\n\nexport const RaceData: Record<string, Race> = Object.freeze({\n\t[RaceNames.ALLERIAN]: {\n\t\taccessPicks: 2,\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [AccessElement.EARTH, AccessElement.AIR, AccessElement.WATER],\n\t\tcostumingRequirements: `The most noticeable trait of Allerians are the lightning-like streaks around their eyes. The color of the streaks signifies which school of magic they are most talented in. The colors correspond as follows: Fire = red, Air = Yellow, Water = Blue, Earth = Green. Those skilled in advanced schools have combined streaks of the related schools. Allerians without magic potential have brown, inert streaks, and are often looked down upon in Allerian society.`,\n\t\trecommendedCostuming: `• Higher ranking Allerians wear silks and flowy clothing, often not bothering with armor\\n• Lower ranking Allerians will wear armor as needed, and similar but less expensive clothing`,\n\t\tdescription: `\n\tAlleria is a medium sized Kingdom with almost no demi-humans. It is surrounded by mountains on three sides and shares a border with Silverthorne. Near the Silverthorne/Allerian border is the Silverthorne city of Gateway, which serves as the primary trade market between the two lands. Alleria developed with an isolationist mentality due to the large mountain ranges around its borders. It has developed a magocratic system of government whereby nobles are granted position and influence based upon magical aptitude and ability. All mages within the kingdom of Alleria have rights and privileges akin to the nobles of Silverthorne. The most powerful among them are lords within the empire and control a fiefdom. Each fiefdom is roughly the equivalent of a Silverthorne Barony. The nobles within the empire are very concerned with honor and family lineage. Many of the most powerful mages in the empire can trace their lineage back to mages from the time of the splitting over 1,000 years ago. Powerful Allerian families will often arrange marriages between family houses with the primary focus being the magical aptitude of potential offspring. These offspring if truly great can often raise the standing of the entire house within the empire. Non-mages within the kingdom vary greatly from peasant to skilled laborer to soldier to merchant. All of these positions are given honor within the empire, but none are considered as important or prestigious as wielding magic. Most merchant houses within Alleria are owned or backed by a noble family and most mercenary groups or soldiering companies of decent size have a noble house’s support. While it is possible for smaller trade houses and mercenary groups to survive without such backing, it is very rare and they are often seen as a lesser resource since they lack magical power to support them. Mages within the empire encompass all walks of life, but are always at the top end of that lifestyle. The most successful merchants in the empire are spell weaver mages. The most successful soldiers are Elementalists. The most successful researchers are diviners. Within Alleria non-mages tend to have one rank within society. That rank can change but is generally based upon the life path they choose and how successful they are in that path. An extremely skilled artisan could garner the attention of a powerful mage and earn their patronage, thus elevating the status of that craftsman’s entire family. Mages on the other hand, tend to have two ranks. The first is a society rank, for which they are almost always within the top 10% for that profession. Then a mage rank which is determined by several factors. Mage rank is primarily determined by the mages spell casting capability, followed by breeding/lineage, and finally by secondary magical skill. Ritualism is viewed as the highest form of magic and those who are capable of it are granted great respect among Alleria. Mages who practice magic in martial form such as elemental warriors or battle mages are often viewed as a lower class of mage needing to resort of physical application to control magic. Magical casting ability is such an important issue within Allerian society that an entire class of researchers has developed. This class of researcher exists for the sole purpose of studying the lineage of mages within the empire and trying to determine the best possible breeding combination among the mages to birth a gifted offspring. The rise and fall of many of the great houses can be directly linked to the success or failure of these historians as they try to breed better mages to increase the standing of their house. Note: While you are a human race, you are not a member of Silverthorne and all advantages of Silverthorne society that are referenced in the book do not apply to Allerians unless specifically calling them out. You are susceptible to all “Human” racial affects such as Human Death venom.`,\n\t},\n\t[RaceNames.AVYANA]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.BARBARIAN]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.DWARF]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.EFREET]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.FIRE_ELF]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.FIREWALKER]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.FORESTWALKER]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.GNOME]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.GUTHRIE]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.HIGH_ELF]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.HUMAN]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.CORSAIR]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.LORECRAFTER]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.ORC]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.SYLVANI]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.VALKENVI]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n\t[RaceNames.WOOD_ELF]: {\n\t\tmajorAccess: [],\n\t\tspecialtyAccess: [],\n\t\tminorAccess: [],\n\t\taccessPicks: 0,\n\t\tcostumingRequirements: \"\",\n\t\trecommendedCostuming: \"\",\n\t\tdescription: \"\",\n\t},\n});\n","export enum AccessRank {\n\tMAJOR = \"Major\",\n\tSPECIALTY = \"Specialty\",\n\tMINOR = \"Minor\",\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"..\";\nimport { AccessElement } from \"../../types/element\";\nimport { RaceNames } from \"../../types/race\";\nimport { RaceData } from \"./../../data/raceData\";\n\ninterface CharacterState {\n\trace: RaceNames;\n\tmajorAccess: AccessElement[];\n\tspecialtyAccess: AccessElement[];\n\tminorAccess: AccessElement[];\n}\n\nconst initialState: CharacterState = {\n\trace: RaceNames.ALLERIAN,\n\tmajorAccess: [],\n\tspecialtyAccess: [],\n\tminorAccess: [],\n};\n\nexport const characterSlice = createSlice({\n\tname: \"character\",\n\tinitialState,\n\treducers: {\n\t\tselectRace: (state: CharacterState, action: PayloadAction<RaceNames>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trace: action.payload,\n\t\t\t\tmajorAccess: RaceData[action.payload].majorAccess,\n\t\t\t\tspecialtyAccess: RaceData[action.payload].specialtyAccess,\n\t\t\t\tminorAccess: RaceData[action.payload].minorAccess,\n\t\t\t};\n\t\t},\n\t\tsetMajorAccess: (state: CharacterState, action: PayloadAction<AccessElement[]>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmajorAccess: action.payload,\n\t\t\t};\n\t\t},\n\t\tsetSpecialtyAccess: (state: CharacterState, action: PayloadAction<AccessElement[]>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspecialtyAccess: action.payload,\n\t\t\t};\n\t\t},\n\t\tsetMinorAccess: (state: CharacterState, action: PayloadAction<AccessElement[]>) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tminorAccess: action.payload,\n\t\t\t};\n\t\t},\n\t},\n});\n\nexport const characterActions = {\n\tselectRace: characterSlice.actions.selectRace,\n\tsetMajorAccess: characterSlice.actions.setMajorAccess,\n\tsetSpecialtyAccess: characterSlice.actions.setSpecialtyAccess,\n\tsetMinorAccess: characterSlice.actions.setMinorAccess,\n};\n\nexport const selectCharacterInfo = (state: RootState): CharacterState => state.character;\n","import { IconType } from \"./icons\";\n\ninterface RpgIconProps {\n\ticon: IconType;\n\tsize?: \"lg\" | \"2x\" | \"3x\" | \"4x\" | \"5x\";\n}\n\nexport function RpgIcon({ icon, size }: RpgIconProps): React.ReactElement {\n\treturn <i className={`ra ra-${icon} ${size && `ra-${size}`}`} />;\n}\n","import { RaceNames } from \"../types/race\";\nimport { RaceData } from \"./../data/raceData\";\n\nexport const getAccessDisplay = (race: RaceNames): string => {\n\tconst { majorAccess, specialtyAccess, minorAccess, accessPicks } = RaceData[race];\n\tconst majorAccessStrings = majorAccess.map((access) => `Major ${access}`).join(\", \");\n\tconst specialtyAccessStrings = specialtyAccess.map((access) => `Specialty ${access}`).join(\", \");\n\tconst minorAccessStrings = minorAccess.map((access) => `Minor ${access}`).join(\", \");\n\treturn `${[majorAccessStrings, specialtyAccessStrings, minorAccessStrings].filter(Boolean).join(\", \")}${\n\t\taccessPicks && `, +${accessPicks} Access Points`\n\t}`;\n};\n","import { Button, ButtonGroup } from \"@blueprintjs/core\";\nimport curry from \"lodash/curry\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AccessRank } from \"../../types/accessRank\";\nimport { AccessElement } from \"../../types/element\";\nimport { RpgIcon } from \"../RpgIcon/RpgIcon\";\nimport { characterActions, selectCharacterInfo } from \"./../../store/character/index\";\nimport { getAccessDisplay } from \"./../../utils/accessDisplay\";\nimport styles from \"./AccessSelection.module.scss\";\n\nconst shouldButtonBeDisabled = (access1: AccessElement[], access2: AccessElement[], element: AccessElement) => {\n\treturn access1.includes(element) || access2.includes(element);\n};\n\ninterface CallbackCollection {\n\tshouldDisableButton: (arg0: AccessElement) => boolean;\n\tsetAccess: (arg0: AccessElement[]) => void;\n\taccessArray: AccessElement[];\n\tremoveElement: (arg0: AccessElement) => AccessElement[];\n}\n\ninterface AccessButtonProps {\n\trank: AccessRank;\n\telement: AccessElement;\n}\n\nexport function AccessSelection(): React.ReactElement {\n\tconst character = useSelector(selectCharacterInfo);\n\tconst { race, majorAccess, specialtyAccess: specialtyAccess, minorAccess } = character;\n\tconst dispatch = useDispatch();\n\n\tconst shouldMajorButtonBeDisabled = curry(shouldButtonBeDisabled)(specialtyAccess, minorAccess);\n\tconst shouldSpecialtyButtonBeDisabled = curry(shouldButtonBeDisabled)(majorAccess, minorAccess);\n\tconst shouldMinorButtonBeDisabled = curry(shouldButtonBeDisabled)(specialtyAccess, majorAccess);\n\n\tconst removeElement = (accessArray: AccessElement[], element: AccessElement) => {\n\t\tconst newArray = [...accessArray];\n\t\tconst index = newArray.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tnewArray.splice(index, 1);\n\t\t}\n\t\treturn newArray;\n\t};\n\n\tconst rankCallbacks: Record<string, CallbackCollection> = {\n\t\t[AccessRank.MAJOR]: {\n\t\t\tshouldDisableButton: shouldMajorButtonBeDisabled,\n\t\t\tsetAccess: characterActions.setMajorAccess,\n\t\t\taccessArray: majorAccess,\n\t\t\tremoveElement: curry(removeElement)(majorAccess),\n\t\t},\n\t\t[AccessRank.SPECIALTY]: {\n\t\t\tshouldDisableButton: shouldSpecialtyButtonBeDisabled,\n\t\t\tsetAccess: characterActions.setSpecialtyAccess,\n\t\t\taccessArray: specialtyAccess,\n\t\t\tremoveElement: curry(removeElement)(specialtyAccess),\n\t\t},\n\t\t[AccessRank.MINOR]: {\n\t\t\tshouldDisableButton: shouldMinorButtonBeDisabled,\n\t\t\tsetAccess: characterActions.setMinorAccess,\n\t\t\taccessArray: minorAccess,\n\t\t\tremoveElement: curry(removeElement)(minorAccess),\n\t\t},\n\t};\n\n\tconst AccessButton = ({ rank, element }: AccessButtonProps) => {\n\t\tconst callbacks = rankCallbacks[rank];\n\t\tlet elementIcon;\n\t\tswitch (element) {\n\t\t\tcase AccessElement.FIRE:\n\t\t\t\telementIcon = <RpgIcon icon=\"fire\" />;\n\t\t\t\tbreak;\n\t\t\tcase AccessElement.AIR:\n\t\t\t\telementIcon = <RpgIcon icon=\"feather-wing\" />;\n\t\t\t\tbreak;\n\t\t\tcase AccessElement.WATER:\n\t\t\t\telementIcon = <RpgIcon icon=\"water-drop\" />;\n\t\t\t\tbreak;\n\t\t\tcase AccessElement.EARTH:\n\t\t\t\telementIcon = <RpgIcon icon=\"rune-stone\" />;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tdisabled={callbacks.shouldDisableButton(element)}\n\t\t\t\tactive={callbacks.accessArray.includes(element)}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tlet newAccess = [];\n\t\t\t\t\tif (callbacks.accessArray.includes(element)) {\n\t\t\t\t\t\tnewAccess = callbacks.removeElement(element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewAccess = [...callbacks.accessArray, element];\n\t\t\t\t\t}\n\t\t\t\t\tdispatch(callbacks.setAccess(newAccess));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{elementIcon} {element}\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tconst onAccessesSelected = () => {\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<div className={styles.accessContainer}>\n\t\t\t<Button icon=\"caret-right\" className={styles.nextButton} onClick={onAccessesSelected}>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t\t<div className={styles.accessHeader}>\n\t\t\t\t<p>\n\t\t\t\t\tYou have chosen <b>{race}</b> which has base accesses of\n\t\t\t\t</p>\n\t\t\t\t<p>{getAccessDisplay(race)}</p>\n\t\t\t\t<p>\n\t\t\t\t\tYou may increase the rank of any racial access or grant yourself access to an element your race\n\t\t\t\t\twould not normally have, up to specialty level.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className={styles.accessSelection}>\n\t\t\t\t<div className={styles.access}>\n\t\t\t\t\t<h2>Major</h2>\n\t\t\t\t\t<ButtonGroup vertical large>\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MAJOR} element={AccessElement.FIRE} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MAJOR} element={AccessElement.WATER} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MAJOR} element={AccessElement.AIR} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MAJOR} element={AccessElement.EARTH} />\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.access}>\n\t\t\t\t\t<h2>Speciality</h2>\n\t\t\t\t\t<ButtonGroup vertical large>\n\t\t\t\t\t\t<AccessButton rank={AccessRank.SPECIALTY} element={AccessElement.FIRE} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.SPECIALTY} element={AccessElement.WATER} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.SPECIALTY} element={AccessElement.AIR} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.SPECIALTY} element={AccessElement.EARTH} />\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.access}>\n\t\t\t\t\t<h2>Minor</h2>\n\t\t\t\t\t<ButtonGroup vertical large>\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MINOR} element={AccessElement.FIRE} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MINOR} element={AccessElement.WATER} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MINOR} element={AccessElement.AIR} />\n\t\t\t\t\t\t<AccessButton rank={AccessRank.MINOR} element={AccessElement.EARTH} />\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","interface MultilineTextProps {\n\ttext: string;\n}\n\nexport function MultilineText({ text }: MultilineTextProps): React.ReactElement {\n\treturn (\n\t\t<div>\n\t\t\t{text.split(\"\\n\").map((i, key) => {\n\t\t\t\treturn <div key={key}>{i}</div>;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n","import { Button, Classes, IPanel } from \"@blueprintjs/core\";\nimport clsx from \"clsx\";\nimport { useDispatch } from \"react-redux\";\nimport { RaceData } from \"../../data/raceData\";\nimport { characterActions } from \"../../store/character\";\nimport { RaceNames } from \"../../types/race\";\nimport { AccessSelection } from \"../AccessSelection/AccessSelection\";\nimport { MultilineText } from \"../MultilineText/MultilineText\";\nimport { getAccessDisplay } from \"./../../utils/accessDisplay\";\nimport styles from \"./RaceTab.module.scss\";\n\ninterface RaceTabProps {\n\trace: RaceNames;\n\topenPanel<P>(panel: IPanel<P>): void;\n}\n\nexport function RaceTab({ race, openPanel }: RaceTabProps): React.ReactElement {\n\tconst dispatch = useDispatch();\n\tconst onRaceSelected = () => {\n\t\tdispatch(characterActions.selectRace(race));\n\t\topenPanel({ component: AccessSelection, title: \"Access\" });\n\t};\n\treturn (\n\t\t<div className={styles.raceTab}>\n\t\t\t<div className={styles.raceInfo}>\n\t\t\t\t<div className={clsx(styles.imagePlaceholder, Classes.SKELETON)}></div>\n\t\t\t\t<div className={styles.raceMeta}>\n\t\t\t\t\t<h3>{race}</h3>\n\t\t\t\t\t<h4>Base Access:</h4>\n\t\t\t\t\t<p>{getAccessDisplay(race)}</p>\n\t\t\t\t\t<h4>Costuming Requirements:</h4>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MultilineText text={RaceData[race].costumingRequirements} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h4>Recommended Costuming:</h4>\n\t\t\t\t\t<MultilineText text={RaceData[race].recommendedCostuming} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h4>Description:</h4>\n\t\t\t<MultilineText text={RaceData[race].description} />\n\t\t\t<Button icon=\"caret-right\" className={styles.nextButton} onClick={onRaceSelected}>\n\t\t\t\tChoose {race}\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n","import { IPanelProps, Tab, Tabs } from \"@blueprintjs/core\";\nimport map from \"lodash/map\";\nimport React from \"react\";\nimport { RaceNames } from \"../../types/race\";\nimport { RaceTab } from \"../RaceTab/RaceTab\";\nimport styles from \"./RaceSelection.module.scss\";\n\nexport function RaceSelection({ openPanel }: IPanelProps): React.ReactElement {\n\tconst [visibleRace, setVisibleRace] = React.useState<string>(RaceNames.ALLERIAN);\n\tconst raceTabs = map(RaceNames, (race) => (\n\t\t<Tab\n\t\t\tkey={race}\n\t\t\tid={race}\n\t\t\ttitle={race}\n\t\t\tpanel={<RaceTab race={race} openPanel={openPanel} />}\n\t\t\tclassName={styles.tab}\n\t\t/>\n\t));\n\tconst onTabChange = (race: string) => {\n\t\tsetVisibleRace(race);\n\t};\n\treturn (\n\t\t<div className={styles.raceSelection}>\n\t\t\t<h3 className={styles.header}>Select a race:</h3>\n\t\t\t<Tabs selectedTabId={visibleRace} onChange={onTabChange} vertical>\n\t\t\t\t{raceTabs}\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n}\n","import { Button, FormGroup, InputGroup, IPanelProps } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { playerActions, selectPlayerInfo } from \"./../../store/player/index\";\nimport styles from \"./PlayerInfo.module.scss\";\nimport { RaceSelection } from \"./../RaceSelection/RaceSelection\";\n\nexport function PlayerInfo({ openPanel }: IPanelProps): React.ReactElement {\n\tconst player = useSelector(selectPlayerInfo);\n\tconst dispatch = useDispatch();\n\n\tconst [firstName, setFirstName] = React.useState(player.firstName);\n\tconst [lastName, setLastName] = React.useState(player.lastName);\n\tconst [email, setEmail] = React.useState(player.lastName);\n\n\tconst onFormSubmit = (event: React.SyntheticEvent) => {\n\t\tevent.preventDefault();\n\t\tdispatch(playerActions.initPlayer({ firstName, lastName, email }));\n\t\topenPanel({ component: RaceSelection, title: \"Race\" });\n\t};\n\n\treturn (\n\t\t<div className={styles.playerInfo}>\n\t\t\t<p>Tell us about you!</p>\n\t\t\t<form onSubmit={onFormSubmit}>\n\t\t\t\t<FormGroup label=\"First Name\" labelFor=\"firstName\" labelInfo=\"(required)\">\n\t\t\t\t\t<InputGroup\n\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\tleftIcon=\"user\"\n\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t\tvalue={`${firstName}`}\n\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\tsetFirstName(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup label=\"Last Name\" labelFor=\"lastName\" labelInfo=\"(required)\">\n\t\t\t\t\t<InputGroup\n\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\tleftIcon=\"user\"\n\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t\tvalue={`${lastName}`}\n\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\tsetLastName(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup label=\"Email\" labelFor=\"email\" labelInfo=\"(required)\">\n\t\t\t\t\t<InputGroup\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tleftIcon=\"envelope\"\n\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\tclassName={styles.input}\n\t\t\t\t\t\tvalue={`${email}`}\n\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\tsetEmail(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t<Button icon=\"caret-right\" type=\"submit\" className={styles.continueButton}>\n\t\t\t\t\tContinue\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","import { Breadcrumbs, IPanel, PanelStack } from \"@blueprintjs/core\";\nimport map from \"lodash/map\";\nimport React from \"react\";\nimport { PlayerInfo } from \"../PlayerInfo/PlayerInfo\";\nimport styles from \"./PanelController.module.scss\";\n\nexport function PanelController(): React.ReactElement {\n\tconst [panels, setPanels] = React.useState<Array<IPanel>>([]);\n\tconst breadcrumbs = [\n\t\t{ text: \"Player Info\" },\n\t\t...map(panels, (panel) => ({\n\t\t\ttext: panel.title,\n\t\t})),\n\t];\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumbs items={breadcrumbs}></Breadcrumbs>\n\t\t\t<PanelStack\n\t\t\t\tclassName={styles.panelController}\n\t\t\t\tinitialPanel={{\n\t\t\t\t\tcomponent: PlayerInfo,\n\t\t\t\t\ttitle: \"Player Info\",\n\t\t\t\t}}\n\t\t\t\tonOpen={(panel) => setPanels([...panels, panel])}\n\t\t\t\tonClose={() => setPanels(panels.slice(1))}\n\t\t\t/>\n\t\t</>\n\t);\n}\n","import { Route, Switch } from \"react-router-dom\";\r\nimport { RoutePaths } from \"../../routes\";\r\nimport { Welcome } from \"../Welcome/Welcome\";\r\nimport { PanelController } from \"./../PanelController/PanelController\";\r\n\r\nexport function RouterSwitch(): React.ReactElement {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path={RoutePaths.WIZARD}>\r\n\t\t\t\t<PanelController />\r\n\t\t\t</Route>\r\n\t\t\t<Route path={RoutePaths.WELCOME}>\r\n\t\t\t\t<Welcome />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { characterSlice } from \"./character\";\nimport { playerSlice } from \"./player\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tplayer: playerSlice.reducer,\n\t\tcharacter: characterSlice.reducer,\n\t},\n});\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport styles from \"./App.module.scss\";\nimport { RouterSwitch } from \"./components/RouterSwitch/RouterSwitch\";\nimport { store } from \"./store\";\nimport \"rpg-awesome/scss/rpg-awesome.scss\";\n\nexport default function App(): React.ReactElement {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className={styles.app}>\n\t\t\t\t<h1>CARPS Character Builder</h1>\n\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<RouterSwitch />\n\t\t\t\t</BrowserRouter>\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerInfo\":\"PlayerInfo_playerInfo__197EW\",\"header\":\"PlayerInfo_header__36MUJ\",\"input\":\"PlayerInfo_input__9Q2Qw\",\"continueButton\":\"PlayerInfo_continueButton__3Cxfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raceTab\":\"RaceTab_raceTab__G9SLr\",\"nextButton\":\"RaceTab_nextButton__2FFqb\",\"imagePlaceholder\":\"RaceTab_imagePlaceholder__1fYWP\",\"raceInfo\":\"RaceTab_raceInfo__3Z0pJ\",\"raceMeta\":\"RaceTab_raceMeta__1cxBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raceSelection\":\"RaceSelection_raceSelection__1pNKQ\",\"tab\":\"RaceSelection_tab__1gyx5\",\"header\":\"RaceSelection_header__ospJi\",\"raceButton\":\"RaceSelection_raceButton__3EcZU\",\"collapse\":\"RaceSelection_collapse__3rmcP\"};"],"sourceRoot":""}